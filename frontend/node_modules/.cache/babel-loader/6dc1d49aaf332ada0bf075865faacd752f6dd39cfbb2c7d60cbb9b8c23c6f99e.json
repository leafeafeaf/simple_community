{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  setup() {},\n  //페이지 생성시 실행되는 코드\n  created() {\n    this.getContentList(this.curr_page - 1, this.sort_type, this.search_type, this.search_text);\n  },\n  data() {\n    //변수 선언\n    return {\n      contentList: [],\n      // 게시글 리스트\n      search_text: \"\",\n      // 검색어 저장\n      search_type: 0,\n      //검색 종류 (0 : 제목, 1 : 작성자)\n      sort_type: \"late\",\n      //정렬 기준 (page할때 사용할 예정)\\\n      content_count: 0,\n      page_count: 0,\n      curr_page: 1\n    };\n  },\n  methods: {\n    test() {\n      console.log(this.store.state.gid);\n    },\n    //함수 설정하는 곳\n    //백엔드에서 게시글 리스트 들고 오기 //미완(페이지, 정렬, 검색, 검색어 매개변수 추가)\n    getContentList(page = 0, sort = \"late\", search, search_content) {\n      console.log(page + \" \" + sort + \" \" + search + \" \" + search_content);\n      if (page < 0) this.curr_page = 0;\n      if (page >= this.page_count) page = this.page_count - 1;\n      this.curr_page = page + 1;\n      this.sort_type = sort;\n      this.axios.get(\"/content/list\", {\n        params: {\n          page: page || 0,\n          sort: sort,\n          search: search,\n          search_content: search_content\n        }\n      })\n      //정상적으로 응답이 왔을시 실행\n      .then(res => {\n        this.contentList = res.data.rows;\n        this.content_count = res.data.count;\n        this.page_count = Math.ceil(this.content_count / 30);\n      })\n      //비정상,오류 시 실행\n      .catch(err => {\n        console.error(err);\n      });\n    },\n    //게시글 상세 내용으로 페이지 이동\n    pushContentDetail(content_id) {\n      this.$router.push({\n        path: \"/content/\",\n        name: \"content\",\n        params: {\n          content_id: content_id\n        }\n      });\n    },\n    //글쓰기 버튼 클릭시 로그인상태면 글쓰기 페이지로 -> 아니면 로그인 페이지로\n    pushWrite() {\n      if (!this.store.state.gid) {\n        alert(\"로그인이 필요한 기능입니다.\");\n        this.$router.push({\n          name: \"login\"\n        });\n      } else {\n        this.$router.push({\n          name: \"write\"\n        });\n      }\n    },\n    //검색\n    searchContent() {\n      console.log(this.search_type);\n      this.getContentList(0, \"late\", this.search_type, this.search_text);\n    },\n    //날짜 포맷해주는 함수 2024-02-23T06:45:50.000Z -> 2024-02-23/06:45:50\n    dateFormat(date) {\n      let d = new Date(date);\n      return d.getFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate() + \" \" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\n    }\n  },\n  computed: {\n    pagingNavigation: function () {\n      let pagearr = [];\n      let start_page = this.curr_page - 1 < 2 ? 1 : this.curr_page - 2;\n      let end_page = this.page_count - this.curr_page < 2 ? this.page_count : this.curr_page + 2;\n      for (let i = start_page; i <= end_page; i++) {\n        pagearr.push(i);\n      }\n      return pagearr;\n    }\n  }\n};","map":{"version":3,"names":["setup","created","getContentList","curr_page","sort_type","search_type","search_text","data","contentList","content_count","page_count","methods","test","console","log","store","state","gid","page","sort","search","search_content","axios","get","params","then","res","rows","count","Math","ceil","catch","err","error","pushContentDetail","content_id","$router","push","path","name","pushWrite","alert","searchContent","dateFormat","date","d","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","computed","pagingNavigation","pagearr","start_page","end_page","i"],"sources":["C:\\vscode\\simple_community\\frontend\\src\\views\\MainView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"sort-div\">\r\n      <div @click=\"getContentList(0, 'late')\">최신순</div>\r\n      <div @click=\"getContentList(0, 'comment')\">댓글순</div>\r\n      <div @click=\"getContentList(0, 'view')\">조회수순</div>\r\n      <div @click=\"getContentList(0, 'recom')\">추천순</div>\r\n      <button type=\"button\" @click=\"test\">test</button>\r\n      <div>{{ content_count }}</div>\r\n      <div>{{ page_count }}</div>\r\n    </div>\r\n    <div class=\"content-list-div\">\r\n      <hr />\r\n      <div v-for=\"content in contentList\" :key=\"content\">\r\n        <div\r\n          class=\"content-list-for\"\r\n          @click=\"this.pushContentDetail(content.content_id)\"\r\n        >\r\n          <div class=\"content-list-detail\">\r\n            <div class=\"content-recom-num\">{{ content.recom_num }}</div>\r\n            <div>|</div>\r\n            <div>\r\n              <div class=\"detail-title\">\r\n                <div class=\"content-title\">{{ content.title }}</div>\r\n                <div class=\"content-comment-num\">\r\n                  [{{ content.comment_num }}]\r\n                </div>\r\n              </div>\r\n              <div class=\"detail-inform\">\r\n                <div class=\"content-date\">{{ dateFormat(content.date) }} /</div>\r\n                <div class=\"content-writer\">{{ content.writer }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"content-view-num\">{{ content.view_num }}</div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n    <div class=\"down-button-div\">\r\n      <button class=\"write-button\" @click=\"pushWrite\">글쓰기</button>\r\n      <button class=\"famous-button\" @click=\"getContentList(0, 'famous')\">\r\n        인기글\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"page-nav\">\r\n      <span\r\n        class=\"nav-btn\"\r\n        @click=\"getContentList(0, sort_type, search_type, search_text)\"\r\n        >처음</span\r\n      >\r\n      <span\r\n        class=\"nav-btn\"\r\n        @click=\"\r\n          getContentList(curr_page - 2, sort_type, search_type, search_text)\r\n        \"\r\n        >이전</span\r\n      >\r\n      <div v-for=\"page in pagingNavigation\" :key=\"page\">\r\n        <span\r\n          class=\"page-num\"\r\n          @click=\"getContentList(page - 1, sort_type, search_type, search_text)\"\r\n          >{{ page }}</span\r\n        >\r\n      </div>\r\n      <span\r\n        class=\"nav-btn\"\r\n        @click=\"getContentList(curr_page, sort_type, search_type, search_text)\"\r\n        >다음</span\r\n      >\r\n      <span\r\n        class=\"nav-btn\"\r\n        @click=\"\r\n          getContentList(page_count - 1, sort_type, search_type, search_text)\r\n        \"\r\n        >끝</span\r\n      >\r\n    </div>\r\n    <div class=\"search-div\">\r\n      <select name=\"\" id=\"\" v-model=\"this.search_type\">\r\n        <option value=\"0\">제목</option>\r\n        <option value=\"1\">작성자</option>\r\n      </select>\r\n      <input type=\"text\" name=\"\" id=\"\" v-model=\"this.search_text\" />\r\n      <button @click=\"searchContent\">Q</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  setup() {}, //페이지 생성시 실행되는 코드\r\n  created() {\r\n    this.getContentList(\r\n      this.curr_page - 1,\r\n      this.sort_type,\r\n      this.search_type,\r\n      this.search_text\r\n    );\r\n  },\r\n\r\n  data() {\r\n    //변수 선언\r\n    return {\r\n      contentList: [], // 게시글 리스트\r\n      search_text: \"\", // 검색어 저장\r\n      search_type: 0, //검색 종류 (0 : 제목, 1 : 작성자)\r\n      sort_type: \"late\", //정렬 기준 (page할때 사용할 예정)\\\r\n      content_count: 0,\r\n      page_count: 0,\r\n      curr_page: 1,\r\n    };\r\n  },\r\n  methods: {\r\n    test() {\r\n      console.log(this.store.state.gid);\r\n    },\r\n\r\n    //함수 설정하는 곳\r\n    //백엔드에서 게시글 리스트 들고 오기 //미완(페이지, 정렬, 검색, 검색어 매개변수 추가)\r\n    getContentList(page = 0, sort = \"late\", search, search_content) {\r\n      console.log(page + \" \" + sort + \" \" + search + \" \" + search_content);\r\n      if (page < 0) this.curr_page = 0;\r\n      if (page >= this.page_count) page = this.page_count - 1;\r\n\r\n      this.curr_page = page + 1;\r\n      this.sort_type = sort;\r\n\r\n      this.axios\r\n        .get(\"/content/list\", {\r\n          params: {\r\n            page: page || 0,\r\n            sort: sort,\r\n            search: search,\r\n            search_content: search_content,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.contentList = res.data.rows;\r\n          this.content_count = res.data.count;\r\n          this.page_count = Math.ceil(this.content_count / 30);\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    //게시글 상세 내용으로 페이지 이동\r\n    pushContentDetail(content_id) {\r\n      this.$router.push({\r\n        path: \"/content/\",\r\n        name: \"content\",\r\n        params: {\r\n          content_id: content_id,\r\n        },\r\n      });\r\n    },\r\n    //글쓰기 버튼 클릭시 로그인상태면 글쓰기 페이지로 -> 아니면 로그인 페이지로\r\n    pushWrite() {\r\n      if (!this.store.state.gid) {\r\n        alert(\"로그인이 필요한 기능입니다.\");\r\n        this.$router.push({\r\n          name: \"login\",\r\n        });\r\n      } else {\r\n        this.$router.push({\r\n          name: \"write\",\r\n        });\r\n      }\r\n    },\r\n    //검색\r\n    searchContent() {\r\n      console.log(this.search_type);\r\n      this.getContentList(0, \"late\", this.search_type, this.search_text);\r\n    },\r\n    //날짜 포맷해주는 함수 2024-02-23T06:45:50.000Z -> 2024-02-23/06:45:50\r\n    dateFormat(date) {\r\n      let d = new Date(date);\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.getHours() +\r\n        \":\" +\r\n        d.getMinutes() +\r\n        \":\" +\r\n        d.getSeconds()\r\n      );\r\n    },\r\n  },\r\n  computed: {\r\n    pagingNavigation: function () {\r\n      let pagearr = [];\r\n      let start_page = this.curr_page - 1 < 2 ? 1 : this.curr_page - 2;\r\n      let end_page =\r\n        this.page_count - this.curr_page < 2\r\n          ? this.page_count\r\n          : this.curr_page + 2;\r\n      for (let i = start_page; i <= end_page; i++) {\r\n        pagearr.push(i);\r\n      }\r\n      return pagearr;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.sort-div {\r\n  display: flex;\r\n  padding: 5px;\r\n  background: #f3f3e4;\r\n  border: 0px solid black;\r\n  border-radius: 6px;\r\n  box-shadow: 0.1px 0.1px 0px 0.8px;\r\n  margin-bottom: 5px;\r\n}\r\n.sort-div div {\r\n  text-decoration: underline;\r\n  color: blue;\r\n  margin-left: 5px;\r\n}\r\n.content-list-div {\r\n}\r\n\r\n.content-list-for {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: rgb(255, 255, 255);\r\n  margin: 5px;\r\n  padding: 0 16px;\r\n}\r\n.content-list-detail {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.content-list-detail > div {\r\n  margin: 8px;\r\n}\r\n.detail-title {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.detail-inform {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.content-writer {\r\n  font-size: 12px;\r\n}\r\n\r\n.content-title {\r\n  color: blue;\r\n  margin-right: 8px;\r\n}\r\n\r\n.content-title:hover {\r\n  text-decoration: underline;\r\n}\r\n.content-date {\r\n  color: rgb(158, 157, 157);\r\n  font-size: 12px;\r\n  margin-right: 8px;\r\n}\r\n.content-recom-num {\r\n}\r\n.content-comment-num {\r\n  color: blue;\r\n}\r\n.content-view-num {\r\n}\r\n\r\n.down-button-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.write-button {\r\n}\r\n.famous-button {\r\n}\r\n.page-nav {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.page-nav span {\r\n  margin-left: 6px;\r\n  font-weight: bold;\r\n}\r\n.page-num {\r\n  text-decoration: underline;\r\n}\r\n\r\n.search-div {\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}