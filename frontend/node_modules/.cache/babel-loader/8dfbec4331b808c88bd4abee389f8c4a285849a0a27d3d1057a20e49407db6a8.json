{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-04a3273c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"아이디\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"3~20자리 사이의 영문과 숫자로 이루어져야 함\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"비밀번호\")], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"비밀번호는 4~60자로 되어야 함\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"비밀번호 확인\")], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"이메일 주소\")], -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"naver.com 메일 주소만 가입 가능함\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"btn-div\"\n};\nconst _hoisted_10 = {\n  class: \"btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", _hoisted_1, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _createElementVNode(\"td\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user_id = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_id]]), _createElementVNode(\"input\", {\n    type: \"button\",\n    value: \"중복체크\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getIdCheck && $options.getIdCheck(...args))\n  })]), _hoisted_3])]), _createElementVNode(\"tr\", null, [_hoisted_4, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"\",\n    id: \"\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.pw = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.pw]]), _hoisted_5])]), _createElementVNode(\"tr\", null, [_hoisted_6, _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"\",\n    id: \"\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.pw_ok = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.pw_ok]]), _createElementVNode(\"div\", null, _toDisplayString($options.pwCheck), 1 /* TEXT */)])]), _createElementVNode(\"tr\", null, [_hoisted_7, _createElementVNode(\"td\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    name: \"\",\n    id: \"\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _createElementVNode(\"input\", {\n    type: \"button\",\n    value: \"중복체크\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.getEmailCheck && $options.getEmailCheck(...args))\n  })]), _hoisted_8])])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.postSign && $options.postSign(...args))\n  }, \"등록\"), _createElementVNode(\"button\", _hoisted_10, [_createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"취소\")]),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","name","id","_cache","$event","$data","user_id","value","onClick","args","$options","getIdCheck","_hoisted_3","_hoisted_4","pw","_hoisted_5","_hoisted_6","pw_ok","_toDisplayString","pwCheck","_hoisted_7","email","getEmailCheck","_hoisted_8","_hoisted_9","postSign","_hoisted_10","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\project_vue\\simple_community\\frontend\\src\\views\\SignView.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div>\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">아이디</div>\r\n          </th>\r\n          <td>\r\n            <div>\r\n              <input type=\"text\" name=\"\" id=\"\" v-model=\"user_id\" />\r\n              <input type=\"button\" value=\"중복체크\" @click=\"getIdCheck\" />\r\n            </div>\r\n            <div>3~20자리 사이의 영문과 숫자로 이루어져야 함</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">비밀번호</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"password\" name=\"\" id=\"\" v-model=\"pw\" />\r\n            <div>비밀번호는 4~60자로 되어야 함</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">비밀번호 확인</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"password\" name=\"\" id=\"\" v-model=\"pw_ok\" />\r\n            <div>{{ pwCheck }}</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">이메일 주소</div>\r\n          </th>\r\n          <td>\r\n            <div>\r\n              <input type=\"email\" name=\"\" id=\"\" v-model=\"email\" />\r\n              <input type=\"button\" value=\"중복체크\" @click=\"getEmailCheck\" />\r\n            </div>\r\n            <div>naver.com 메일 주소만 가입 가능함</div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"btn-div\">\r\n      <button type=\"submit\" class=\"btn\" @click=\"postSign\">등록</button>\r\n      <button class=\"btn\"><router-link to=\"/login\">취소</router-link></button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      is_id: false,\r\n      is_email: false,\r\n      is_pw: false,\r\n      user_id: \"\",\r\n      email: \"\",\r\n      pw: \"\",\r\n      pw_ok: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    //함수 설정하는 곳\r\n    //백엔드에서 id 중복 체크하기\r\n    getIdCheck() {\r\n      this.axios\r\n        .get(\"/id-check\", {\r\n          params: {\r\n            user_id: this.user_id,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.is_id = res.data.result;\r\n          if (this.is_id == true) {\r\n            alert(\"사용가능\");\r\n          } else {\r\n            alert(\"사용불가능\");\r\n          }\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    //백엔드에서 email 중복 체크하기\r\n    getEmailCheck() {\r\n      if (!this.email.includes(\"@naver.com\")) return;\r\n\r\n      this.axios\r\n        .get(\"/email-check\", {\r\n          params: {\r\n            email: this.email,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행, naver.com만 가능\r\n        .then((res) => {\r\n          this.is_email = res.data.result;\r\n          if (this.is_email == true) {\r\n            alert(\"사용가능\");\r\n          } else {\r\n            alert(\"사용불가능\");\r\n          }\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    // 등록 시 회원 추가\r\n    postSign() {\r\n      // 중복 체크 먼저 해야함\r\n      if (!this.is_id) {\r\n        alert(\"아이디를 확인해주세요\");\r\n        return;\r\n      }\r\n      if (!this.is_email) {\r\n        alert(\"이메일을 확인해주세요\");\r\n        return;\r\n      }\r\n      if (this.pw.length < 4 || this.pw.length > 60) {\r\n        alert(\"비밀번호 형식이 올바르지 않아요\");\r\n        return;\r\n      }\r\n      if (this.pw != this.pw_ok) {\r\n        alert(\"비밀번호 확인이 같지않아요\");\r\n        return;\r\n      }\r\n\r\n      // 정상시 유저 등록\r\n      this.axios\r\n        .post(\"/sign\", {\r\n          user_id: this.user_id,\r\n          email: this.email,\r\n          pw: this.pw,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"성공\", res);\r\n        })\r\n        .catch((res) => {\r\n          console.error(\"실패\", res);\r\n        })\r\n        .then(() => {\r\n          this.$router.push({\r\n            name: \"login\",\r\n          });\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    pwCheck() {\r\n      if (this.pw != this.pw_ok) {\r\n        return \"두 비밀번호가 같지 않아요\";\r\n      } else {\r\n        return \"같아요\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\na {\r\n  text-decoration-line: none;\r\n  color: black;\r\n}\r\n\r\ninput {\r\n  width: 200px;\r\n}\r\n\r\n.table {\r\n  border-spacing: 10px;\r\n}\r\n.table th {\r\n  padding: 10px 10px 10px;\r\n  border-top: 1px solid #000000;\r\n  border-bottom: 1px solid #000000;\r\n  text-align: left;\r\n}\r\n.table td {\r\n  padding: 10px 10px 10px;\r\n  text-align: left;\r\n}\r\n.table-row {\r\n  background-color: #e7dede;\r\n}\r\n\r\n.btn-div {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n}\r\n.btn {\r\n  width: 100px;\r\n  padding: 5px;\r\n  margin: 10px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}