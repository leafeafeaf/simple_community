{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  setup() {},\n  props: {\n    content_id: {\n      type: Number,\n      default: 8\n    }\n  },\n  created() {\n    this.getContentDetail(this.content_id);\n    this.getCommentList();\n  },\n  data() {\n    return {\n      contentDetail: {},\n      is_like: false,\n      commentList: [],\n      comment_content: \"\"\n    };\n  },\n  methods: {\n    // 게시글 불러오기 api 호출\n    getContentDetail(content_id) {\n      this.axios.get(\"/content/\" + content_id, {\n        params: {\n          user_id: this.$user_id\n        }\n      })\n      //정상적으로 응답이 왔을시 실행\n      .then(res => {\n        this.contentDetail = res.data.content;\n        this.is_like = res.data.is_like;\n      })\n      //비정상,오류 시 실행\n      .catch(err => {\n        console.error(err);\n      });\n    },\n    // 게시글 삭제 api 호출\n    deleteContent() {\n      this.axios.delete(\"/content/\" + this.content_id).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      }).then(() => {\n        this.$router.replace({\n          name: \"main\"\n        }); //이동인데 뒤로가기 안됨\n      });\n    },\n    //수정 페이지로 이동\n    pushModify() {\n      this.$router.push({\n        //이동인데 뒤로가기 됨\n        name: \"modify\",\n        params: {\n          contentDetail: JSON.stringify(this.contentDetail)\n        }\n      });\n    },\n    // 댓글 리스트 불러오기 api 호출\n    getCommentList() {\n      this.axios.get(\"/comment/list/\" + this.content_id).then(res => {\n        this.commentList = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // 댓글 작성 api 호출\n    postComment() {\n      if (!this.comment_content) {\n        alert(\"댓글을 입력해주세요\");\n        return;\n      }\n      if (!this.store.state.gid) {\n        alert(\"로그인 해주세요\");\n        this.$router.push({\n          name: \"login\"\n        });\n        return;\n      }\n      this.axios.post(\"/comment\", {\n        content: this.comment_content,\n        content_id: this.content_id,\n        writer: this.store.state.gid\n      }).then(res => {\n        this.commentList.push(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // 댓글 삭제 api 호출\n    deleteComment(comment_id) {\n      this.axios.delete(\"/comment/\" + comment_id).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  computed: {\n    isGid() {\n      if (this.store.state.gid == this.contentDetail.writer) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["setup","props","content_id","type","Number","default","created","getContentDetail","getCommentList","data","contentDetail","is_like","commentList","comment_content","methods","axios","get","params","user_id","$user_id","then","res","content","catch","err","console","error","deleteContent","delete","log","$router","replace","name","pushModify","push","JSON","stringify","postComment","alert","store","state","gid","post","writer","deleteComment","comment_id","computed","isGid"],"sources":["C:\\project_vue\\simple_community\\frontend\\src\\views\\ContentView.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div>\r\n    <div>\r\n      <hr />\r\n      <div class=\"title-div\">\r\n        <div>{{ contentDetail.title }}</div>\r\n        <div>{{ contentDetail.date }}</div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"writer-div\">\r\n        <div>{{ contentDetail.writer }}</div>\r\n        <div class=\"viewnum-div\">\r\n          <div>조회 수 : {{ contentDetail.view_num }}</div>\r\n          <div>추천 수 : {{ contentDetail.recom_num }}</div>\r\n          <div>댓글 : {{ contentDetail.comment_num }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div class=\"content\">{{ contentDetail.content }}</div>\r\n    </div>\r\n    <div class=\"recom-div\">\r\n      <div class=\"recom\">{{ contentDetail.recom_num }}</div>\r\n      <input class=\"recom-btn\" type=\"button\" value=\"좋아요\" />\r\n    </div>\r\n    <!--(gid가 writer 같을때만 보이고 함수에서도 체크)-->\r\n    <button @click=\"pushModify\" v-if=\"isGid\">수정</button>\r\n    <button @click=\"deleteContent\" v-if=\"isGid\">삭제</button>\r\n  </div>\r\n  <hr />\r\n  <div>\r\n    <div>\r\n      <div v-for=\"comment in commentList\" :key=\"comment\">\r\n        <div class=\"comment-writer-div\">\r\n          <div class=\"comment-writer\">{{ comment.writer }}</div>\r\n          <div class=\"comment-date\">{{ comment.date }}</div>\r\n        </div>\r\n        <div class=\"comment-content-div\">\r\n          <div class=\"comment-content\">{{ comment.content }}</div>\r\n          <div class=\"comment-delete\">삭제</div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n    <div>댓글 번호</div>\r\n    <div>\r\n      <div class=\"comment-write\">댓글 쓰기</div>\r\n      <div class=\"comment-post\">\r\n        <textarea\r\n          class=\"comment-textarea\"\r\n          name=\"\"\r\n          id=\"\"\r\n          cols=\"1\"\r\n          rows=\"3\"\r\n          v-model=\"comment_content\"\r\n        ></textarea>\r\n        <input\r\n          class=\"comment-btn\"\r\n          type=\"button\"\r\n          value=\"등록\"\r\n          @click=\"postComment\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  setup() {},\r\n  props: {\r\n    content_id: {\r\n      type: Number,\r\n      default: 8,\r\n    },\r\n  },\r\n  created() {\r\n    this.getContentDetail(this.content_id);\r\n    this.getCommentList();\r\n  },\r\n  data() {\r\n    return {\r\n      contentDetail: {},\r\n      is_like: false,\r\n      commentList: [],\r\n      comment_content: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    // 게시글 불러오기 api 호출\r\n    getContentDetail(content_id) {\r\n      this.axios\r\n        .get(\"/content/\" + content_id, {\r\n          params: {\r\n            user_id: this.$user_id,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.contentDetail = res.data.content;\r\n          this.is_like = res.data.is_like;\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    // 게시글 삭제 api 호출\r\n    deleteContent() {\r\n      this.axios\r\n        .delete(\"/content/\" + this.content_id)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .then(() => {\r\n          this.$router.replace({\r\n            name: \"main\",\r\n          }); //이동인데 뒤로가기 안됨\r\n        });\r\n    },\r\n\r\n    //수정 페이지로 이동\r\n    pushModify() {\r\n      this.$router.push({\r\n        //이동인데 뒤로가기 됨\r\n        name: \"modify\",\r\n        params: {\r\n          contentDetail: JSON.stringify(this.contentDetail),\r\n        },\r\n      });\r\n    },\r\n    // 댓글 리스트 불러오기 api 호출\r\n    getCommentList() {\r\n      this.axios\r\n        .get(\"/comment/list/\" + this.content_id)\r\n        .then((res) => {\r\n          this.commentList = res.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    // 댓글 작성 api 호출\r\n    postComment() {\r\n      if (!this.comment_content) {\r\n        alert(\"댓글을 입력해주세요\");\r\n        return;\r\n      }\r\n      if (!this.store.state.gid) {\r\n        alert(\"로그인 해주세요\");\r\n        this.$router.push({\r\n          name: \"login\",\r\n        });\r\n        return;\r\n      }\r\n      this.axios\r\n        .post(\"/comment\", {\r\n          content: this.comment_content,\r\n          content_id: this.content_id,\r\n          writer: this.store.state.gid,\r\n        })\r\n        .then((res) => {\r\n          this.commentList.push(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    // 댓글 삭제 api 호출\r\n    deleteComment(comment_id) {\r\n      this.axios\r\n        .delete(\"/comment/\" + comment_id)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    isGid() {\r\n      if (this.store.state.gid == this.contentDetail.writer) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.title-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 8px;\r\n}\r\n.writer-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 8px;\r\n  margin-bottom: 8px;\r\n}\r\n.viewnum-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.viewnum-div > div {\r\n  margin-right: 8px;\r\n}\r\n.content {\r\n  text-align: left;\r\n  width: 100%;\r\n  padding: 20% 30px;\r\n  margin-bottom: 10px;\r\n  border-right: 0px solid black;\r\n  border-left: 0px solid black;\r\n}\r\n.recom-div {\r\n  margin: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.recom {\r\n  color: blue;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.recom-btn {\r\n  margin: 16px 0px;\r\n  width: 100px;\r\n}\r\n\r\n.comment-writer-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 8px;\r\n}\r\n.comment-write {\r\n  display: flex;\r\n  justify-content: left;\r\n  margin: 8px;\r\n}\r\n.comment-post {\r\n  display: flex;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n}\r\n.comment-content-div {\r\n  margin: 8px;\r\n}\r\n.comment-content {\r\n  text-align: left;\r\n}\r\n\r\n.comment-textarea {\r\n  width: 90%;\r\n  resize: none;\r\n  margin-right: 8px;\r\n  padding: 5px;\r\n}\r\n.comment-btn {\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}