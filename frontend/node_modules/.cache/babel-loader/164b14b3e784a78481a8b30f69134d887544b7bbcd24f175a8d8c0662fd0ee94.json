{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      is_id: false,\n      is_email: false,\n      user_id: \"\",\n      email: \"\",\n      pw: \"\",\n      pw_check: \"\"\n    };\n  },\n  methods: {\n    //함수 설정하는 곳\n    //백엔드에서 id 중복 체크하기\n    getIdCheck() {\n      this.axios.get(\"/id-check\", {\n        params: {\n          user_id: this.user_id\n        }\n      })\n      //정상적으로 응답이 왔을시 실행\n      .then(res => {\n        this.is_id = res.data.result;\n        if (this.is_id == true) {\n          alert(\"사용가능\");\n        } else {\n          alert(\"사용불가능\");\n        }\n      })\n      //비정상,오류 시 실행\n      .catch(err => {\n        console.error(err);\n      });\n    },\n    //백엔드에서 email 중복 체크하기\n    getEmailCheck() {\n      this.axios.get(\"/email-check\", {\n        params: {\n          email: this.email\n        }\n      })\n      //정상적으로 응답이 왔을시 실행, naver.com만 가능\n      .then(res => {\n        this.is_email = res.data.result;\n        if (this.is_email == true && this.email.includes(\"@naver.com\")) {\n          alert(\"사용가능\");\n        } else {\n          alert(\"사용불가능\");\n        }\n      })\n      //비정상,오류 시 실행\n      .catch(err => {\n        console.error(err);\n      });\n    },\n    // 등록 시 회원 추가\n    postSign() {\n      this.axios.post(\"/sign\", {\n        user_id: this.user_id,\n        email: this.email,\n        pw: this.pw\n      }).then(res => {\n        console.log(\"성공\", res);\n        content_id = res.data.content_id;\n      }).catch(res => {\n        console.error(\"실패\", res);\n      }).then(() => {\n        this.$router.push({\n          path: \"/content/\",\n          name: \"content\",\n          params: {\n            content_id: content_id\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","is_id","is_email","user_id","email","pw","pw_check","methods","getIdCheck","axios","get","params","then","res","result","alert","catch","err","console","error","getEmailCheck","includes","postSign","post","log","content_id","$router","push","path","name"],"sources":["C:\\project_vue\\simple_community\\frontend\\src\\views\\SignView.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div>\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">아이디</div>\r\n          </th>\r\n          <td>\r\n            <div>\r\n              <input type=\"text\" name=\"\" id=\"\" v-model=\"user_id\" />\r\n              <input type=\"button\" value=\"중복체크\" @click=\"getIdCheck\" />\r\n            </div>\r\n            <div>3~20자리 사이의 영문과 숫자로 이루어져야 함</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">비밀번호</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"password\" name=\"\" id=\"\" v-model=\"pw\" />\r\n            <div>비밀번호는 8~60자로 되어야 함</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">비밀번호 확인</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"password\" name=\"\" id=\"\" v-model=\"pw_check\" />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">이메일 주소</div>\r\n          </th>\r\n          <td>\r\n            <div>\r\n              <input type=\"email\" name=\"\" id=\"\" v-model=\"email\" />\r\n              <input type=\"button\" value=\"중복체크\" @click=\"getEmailCheck\" />\r\n            </div>\r\n            <div>naver.com 메일 주소만 가입 가능함</div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"btn-div\">\r\n      <button type=\"submit\" class=\"btn\">등록</button>\r\n      <button class=\"btn\"><router-link to=\"/\">취소</router-link></button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      is_id: false,\r\n      is_email: false,\r\n      user_id: \"\",\r\n      email: \"\",\r\n      pw: \"\",\r\n      pw_check: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    //함수 설정하는 곳\r\n    //백엔드에서 id 중복 체크하기\r\n    getIdCheck() {\r\n      this.axios\r\n        .get(\"/id-check\", {\r\n          params: {\r\n            user_id: this.user_id,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.is_id = res.data.result;\r\n          if (this.is_id == true) {\r\n            alert(\"사용가능\");\r\n          } else {\r\n            alert(\"사용불가능\");\r\n          }\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    //백엔드에서 email 중복 체크하기\r\n    getEmailCheck() {\r\n      this.axios\r\n        .get(\"/email-check\", {\r\n          params: {\r\n            email: this.email,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행, naver.com만 가능\r\n        .then((res) => {\r\n          this.is_email = res.data.result;\r\n          if (this.is_email == true && this.email.includes(\"@naver.com\")) {\r\n            alert(\"사용가능\");\r\n          } else {\r\n            alert(\"사용불가능\");\r\n          }\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    // 등록 시 회원 추가\r\n    postSign() {\r\n      this.axios\r\n        .post(\"/sign\", {\r\n          user_id: this.user_id,\r\n          email: this.email,\r\n          pw: this.pw,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"성공\", res);\r\n          content_id = res.data.content_id;\r\n        })\r\n        .catch((res) => {\r\n          console.error(\"실패\", res);\r\n        })\r\n        .then(() => {\r\n          this.$router.push({\r\n            path: \"/content/\",\r\n            name: \"content\",\r\n            params: {\r\n              content_id: content_id,\r\n            },\r\n          });\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\na {\r\n  text-decoration-line: none;\r\n  color: black;\r\n}\r\n\r\ninput {\r\n  width: 200px;\r\n}\r\n\r\n.table {\r\n  border-spacing: 10px;\r\n}\r\n.table th {\r\n  padding: 10px 10px 10px;\r\n  border-top: 1px solid #000000;\r\n  border-bottom: 1px solid #000000;\r\n  text-align: left;\r\n}\r\n.table td {\r\n  padding: 10px 10px 10px;\r\n  text-align: left;\r\n}\r\n.table-row {\r\n  background-color: #e7dede;\r\n}\r\n\r\n.btn-div {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n}\r\n.btn {\r\n  width: 100px;\r\n  padding: 5px;\r\n  margin: 10px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";AAsDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,EAAE,EAAE,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACAC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAI,CACNC,GAAG,CAAC,WAAW,EAAE;QAChBC,MAAM,EAAE;UACNR,OAAO,EAAE,IAAI,CAACA;QAChB;MACF,CAAC;MACD;MAAA,CACCS,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACZ,KAAI,GAAIY,GAAG,CAACb,IAAI,CAACc,MAAM;QAC5B,IAAI,IAAI,CAACb,KAAI,IAAK,IAAI,EAAE;UACtBc,KAAK,CAAC,MAAM,CAAC;QACf,OAAO;UACLA,KAAK,CAAC,OAAO,CAAC;QAChB;MACF,CAAC;MACD;MAAA,CACCC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACD;IACAG,aAAaA,CAAA,EAAG;MACd,IAAI,CAACX,KAAI,CACNC,GAAG,CAAC,cAAc,EAAE;QACnBC,MAAM,EAAE;UACNP,KAAK,EAAE,IAAI,CAACA;QACd;MACF,CAAC;MACD;MAAA,CACCQ,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACX,QAAO,GAAIW,GAAG,CAACb,IAAI,CAACc,MAAM;QAC/B,IAAI,IAAI,CAACZ,QAAO,IAAK,IAAG,IAAK,IAAI,CAACE,KAAK,CAACiB,QAAQ,CAAC,YAAY,CAAC,EAAE;UAC9DN,KAAK,CAAC,MAAM,CAAC;QACf,OAAO;UACLA,KAAK,CAAC,OAAO,CAAC;QAChB;MACF,CAAC;MACD;MAAA,CACCC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACD;IACAK,QAAQA,CAAA,EAAG;MACT,IAAI,CAACb,KAAI,CACNc,IAAI,CAAC,OAAO,EAAE;QACbpB,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,EAAE,EAAE,IAAI,CAACA;MACX,CAAC,EACAO,IAAI,CAAEC,GAAG,IAAK;QACbK,OAAO,CAACM,GAAG,CAAC,IAAI,EAAEX,GAAG,CAAC;QACtBY,UAAS,GAAIZ,GAAG,CAACb,IAAI,CAACyB,UAAU;MAClC,CAAC,EACAT,KAAK,CAAEH,GAAG,IAAK;QACdK,OAAO,CAACC,KAAK,CAAC,IAAI,EAAEN,GAAG,CAAC;MAC1B,CAAC,EACAD,IAAI,CAAC,MAAM;QACV,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC;UAChBC,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAE,SAAS;UACflB,MAAM,EAAE;YACNc,UAAU,EAAEA;UACd;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}