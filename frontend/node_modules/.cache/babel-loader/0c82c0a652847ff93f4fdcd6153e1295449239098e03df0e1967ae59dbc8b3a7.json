{"ast":null,"code":"export default {\n  setup(props) {},\n  created() {\n    this.getContentDetail(8);\n  },\n  data() {\n    return {\n      contentDetail: {\n        content_id: 1,\n        title: \"롤 하자\",\n        writer: \"야민철\",\n        content: \"롤좀하자 야성민\",\n        file: \"1.jpg\",\n        date: new Date(),\n        view_num: 5,\n        comment_num: 6,\n        recom_num: 7\n      },\n      is_like: false,\n      commentList: [{\n        comment_id: 1,\n        content: \"싫엉\",\n        date: new Date(),\n        writer: \"야정찬\",\n        content_id: 4\n      }, {\n        comment_id: 2,\n        content: \"싫엉22222\",\n        date: new Date(),\n        writer: \"야민호\",\n        content_id: 4\n      }, {\n        comment_id: 3,\n        content: \"싫엉33333333\",\n        date: new Date(),\n        writer: \"야성민\",\n        content_id: 4\n      }]\n    };\n  },\n  methods: {\n    getContentDetail(content_id) {\n      this.axios.get(\"/content/\" + content_id, {\n        params: {\n          user_id: this.$user_id\n        }\n      })\n      //정상적으로 응답이 왔을시 실행\n      .then(res => {\n        this.contentDetail = res.data.content;\n        this.is_like = res.data.is_like;\n      })\n      //비정상,오류 시 실행\n      .catch(err => {\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["setup","props","created","getContentDetail","data","contentDetail","content_id","title","writer","content","file","date","Date","view_num","comment_num","recom_num","is_like","commentList","comment_id","methods","axios","get","params","user_id","$user_id","then","res","catch","err","console","error"],"sources":["C:\\vscode\\simple_community\\frontend\\src\\views\\ContentView.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div>상세 게시글 화면 입니다.</div>\r\n  <div>\r\n    <div>\r\n      <hr />\r\n      <div class=\"title-div\">\r\n        <div>{{ contentDetail.title }}</div>\r\n        <div>{{ contentDetail.date }}</div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"writer-div\">\r\n        <div>{{ contentDetail.writer }}</div>\r\n        <div class=\"viewnum-div\">\r\n          <div>조회 수 : {{ contentDetail.view_num }}</div>\r\n          <div>추천 수 : {{ contentDetail.recom_num }}</div>\r\n          <div>댓글 : {{ contentDetail.comment_num }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <textarea class=\"content\" name=\"\" id=\"\" rows=\"30\">게시글</textarea>\r\n    </div>\r\n    <div class=\"recom-div\">\r\n      <div class=\"recom\">{{ contentDetail.recom_num }}</div>\r\n      <input class=\"recom-btn\" type=\"button\" value=\"좋아요\" />\r\n    </div>\r\n  </div>\r\n  <hr />\r\n  <div>\r\n    <div>\r\n      <div v-for=\"comment in commentList\" :key=\"comment\">\r\n        <div class=\"comment-writer-div\">\r\n          <div class=\"comment-writer\">{{ comment.writer }}</div>\r\n          <div class=\"comment-date\">{{ comment.date }}</div>\r\n        </div>\r\n        <div class=\"comment-content-div\">{{ comment.content }}</div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n    <div>댓글 번호</div>\r\n    <div>\r\n      <div class=\"comment-write\">댓글 쓰기</div>\r\n      <div class=\"comment-post\">\r\n        <textarea\r\n          class=\"comment-textarea\"\r\n          name=\"\"\r\n          id=\"\"\r\n          cols=\"1\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n        <input class=\"comment-btn\" type=\"button\" value=\"등록\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  setup(props) {},\r\n  created() {\r\n    this.getContentDetail(8);\r\n  },\r\n  data() {\r\n    return {\r\n      contentDetail: {\r\n        content_id: 1,\r\n        title: \"롤 하자\",\r\n        writer: \"야민철\",\r\n        content: \"롤좀하자 야성민\",\r\n        file: \"1.jpg\",\r\n        date: new Date(),\r\n        view_num: 5,\r\n        comment_num: 6,\r\n        recom_num: 7,\r\n      },\r\n      is_like: false,\r\n      commentList: [\r\n        {\r\n          comment_id: 1,\r\n          content: \"싫엉\",\r\n          date: new Date(),\r\n          writer: \"야정찬\",\r\n          content_id: 4,\r\n        },\r\n        {\r\n          comment_id: 2,\r\n          content: \"싫엉22222\",\r\n          date: new Date(),\r\n          writer: \"야민호\",\r\n          content_id: 4,\r\n        },\r\n        {\r\n          comment_id: 3,\r\n          content: \"싫엉33333333\",\r\n          date: new Date(),\r\n          writer: \"야성민\",\r\n          content_id: 4,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    getContentDetail(content_id) {\r\n      this.axios\r\n        .get(\"/content/\" + content_id, {\r\n          params: {\r\n            user_id: this.$user_id,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.contentDetail = res.data.content;\r\n          this.is_like = res.data.is_like;\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.title-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 8px;\r\n}\r\n.writer-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 8px;\r\n  margin-bottom: 8px;\r\n}\r\n.viewnum-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.viewnum-div > div {\r\n  margin-right: 8px;\r\n}\r\n.content {\r\n  width: 100%;\r\n  resize: none;\r\n  margin-bottom: 10px;\r\n  border-right: 0px solid black;\r\n  border-left: 0px solid black;\r\n}\r\n.recom-div {\r\n  margin: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.recom {\r\n  color: blue;\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.recom-btn {\r\n  margin: 16px 0px;\r\n  width: 100px;\r\n}\r\n\r\n.comment-writer-div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 8px;\r\n}\r\n.comment-write {\r\n  display: flex;\r\n  justify-content: left;\r\n  margin: 8px;\r\n}\r\n.comment-post {\r\n  display: flex;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n}\r\n.comment-content-div {\r\n  text-align: left;\r\n  margin: 8px;\r\n}\r\n\r\n.comment-textarea {\r\n  width: 90%;\r\n  resize: none;\r\n  margin-right: 8px;\r\n  padding: 5px;\r\n}\r\n.comment-btn {\r\n}\r\n</style>\r\n"],"mappings":"AAwDA,eAAe;EACbA,KAAKA,CAACC,KAAK,EAAE,CAAC,CAAC;EACfC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC,CAAC;EAC1B,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;QACbC,UAAU,EAAE,CAAC;QACbC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,UAAU;QACnBC,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;QAChBC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,CAAC;QACdC,SAAS,EAAE;MACb,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,CACX;QACEC,UAAU,EAAE,CAAC;QACbT,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;QAChBJ,MAAM,EAAE,KAAK;QACbF,UAAU,EAAE;MACd,CAAC,EACD;QACEY,UAAU,EAAE,CAAC;QACbT,OAAO,EAAE,SAAS;QAClBE,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;QAChBJ,MAAM,EAAE,KAAK;QACbF,UAAU,EAAE;MACd,CAAC,EACD;QACEY,UAAU,EAAE,CAAC;QACbT,OAAO,EAAE,YAAY;QACrBE,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;QAChBJ,MAAM,EAAE,KAAK;QACbF,UAAU,EAAE;MACd,CAAC;IAEL,CAAC;EACH,CAAC;EACDa,OAAO,EAAE;IACPhB,gBAAgBA,CAACG,UAAU,EAAE;MAC3B,IAAI,CAACc,KAAI,CACNC,GAAG,CAAC,WAAU,GAAIf,UAAU,EAAE;QAC7BgB,MAAM,EAAE;UACNC,OAAO,EAAE,IAAI,CAACC;QAChB;MACF,CAAC;MACD;MAAA,CACCC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACrB,aAAY,GAAIqB,GAAG,CAACtB,IAAI,CAACK,OAAO;QACrC,IAAI,CAACO,OAAM,GAAIU,GAAG,CAACtB,IAAI,CAACY,OAAO;MACjC,CAAC;MACD;MAAA,CACCW,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}