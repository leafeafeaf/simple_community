{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-04a3273c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  action: \"\",\n  method: \"\"\n};\nconst _hoisted_2 = {\n  class: \"table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"아이디\")], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, \"3~20자리 사이의 영문과 숫자로 이루어져야 함\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"비밀번호\")]), /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"password\",\n  name: \"\",\n  id: \"\"\n}), /*#__PURE__*/_createElementVNode(\"div\", null, \"비밀번호는 8~60자로 되어야 함\")])], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"비밀번호 확인\")]), /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"password\",\n  name: \"\",\n  id: \"\"\n})])], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table-row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"info\"\n}, \"이메일 주소\")]), /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"email\",\n  name: \"\",\n  id: \"\"\n}), /*#__PURE__*/_createElementVNode(\"div\", null, \"naver.com 메일 주소만 가입 가능함\")])], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"btn-div\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn\"\n}, \"등록\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"form\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => this.test && this.test(...args))\n  }, \"테스트\"), _hoisted_3, _createElementVNode(\"td\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user_id = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_id]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getIdCheck && $options.getIdCheck(...args))\n  }, \"중복체크\"), _createElementVNode(\"span\", null, _toDisplayString($data.msg), 1 /* TEXT */)]), _hoisted_4])]), _hoisted_5, _hoisted_6, _hoisted_7])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"button\", _hoisted_10, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"취소\")]),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["action","method","class","_createElementVNode","type","name","id","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","test","_hoisted_3","$event","$data","user_id","$options","getIdCheck","_toDisplayString","msg","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\project_vue\\simple_community\\frontend\\src\\views\\SignView.vue"],"sourcesContent":["<template lang=\"\">\r\n  <form action=\"\" method=\"\">\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <button @click=\"this.test\">테스트</button>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">아이디</div>\r\n          </th>\r\n          <td>\r\n            <div>\r\n              <input type=\"text\" name=\"\" id=\"\" v-model=\"user_id\" />\r\n              <button @click=\"getIdCheck\">중복체크</button>\r\n              <span>{{ msg }}</span>\r\n            </div>\r\n            <div>3~20자리 사이의 영문과 숫자로 이루어져야 함</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">비밀번호</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"password\" name=\"\" id=\"\" />\r\n            <div>비밀번호는 8~60자로 되어야 함</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">비밀번호 확인</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"password\" name=\"\" id=\"\" />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"table-row\">\r\n            <div class=\"info\">이메일 주소</div>\r\n          </th>\r\n          <td>\r\n            <input type=\"email\" name=\"\" id=\"\" />\r\n            <div>naver.com 메일 주소만 가입 가능함</div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"btn-div\">\r\n      <button type=\"submit\" class=\"btn\">등록</button>\r\n      <button class=\"btn\"><router-link to=\"/\">취소</router-link></button>\r\n    </div>\r\n  </form>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      is_id: false,\r\n      is_email: false,\r\n      msg: \"\",\r\n      user_id: \"야민철\",\r\n    };\r\n  },\r\n  methods: {\r\n    //함수 설정하는 곳\r\n    //백엔드에서 id 중복 체크하기\r\n    getIdCheck() {\r\n      this.axios\r\n        .get(\"/id-check\", {\r\n          params: {\r\n            user_id: \"123\",\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.is_id = res.data.result;\r\n          if (this.is_id == true) {\r\n            this.msg = \"사용가능합니다\";\r\n            console.log(\"사용\");\r\n          } else {\r\n            this.msg = \"사용 할 수 없습니다.\";\r\n            console.log(\"사용불가\");\r\n          }\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    //백엔드에서 email 중복 체크하기\r\n    getEmailCheck() {\r\n      this.axios\r\n        .get(\"/email-check\", {\r\n          params: {\r\n            email: null,\r\n          },\r\n        })\r\n        //정상적으로 응답이 왔을시 실행\r\n        .then((res) => {\r\n          this.is_email = res.data.result;\r\n        })\r\n        //비정상,오류 시 실행\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    },\r\n    test() {\r\n      console.log(this.user_id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\na {\r\n  text-decoration-line: none;\r\n  color: black;\r\n}\r\n\r\ninput {\r\n  width: 200px;\r\n}\r\n\r\n.table {\r\n  border-spacing: 10px;\r\n}\r\n.table th {\r\n  padding: 10px 10px 10px;\r\n  border-top: 1px solid #000000;\r\n  border-bottom: 1px solid #000000;\r\n  text-align: left;\r\n}\r\n.table td {\r\n  padding: 10px 10px 10px;\r\n  text-align: left;\r\n}\r\n.table-row {\r\n  background-color: #e7dede;\r\n}\r\n\r\n.btn-div {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n}\r\n.btn {\r\n  width: 100px;\r\n  padding: 5px;\r\n  margin: 10px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;;EACQA,MAAM,EAAC,EAAE;EAACC,MAAM,EAAC;;;EACdC,KAAK,EAAC;AAAO;gEAIdC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAW,I,aACnBC,mBAAA,CAA2B;EAAtBD,KAAK,EAAC;AAAM,GAAC,KAAG,E;gEAQrBC,mBAAA,CAAqC,aAAhC,4BAA0B;gEAGnCA,mBAAA,CAQK,a,aAPHA,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAW,I,aACnBC,mBAAA,CAA4B;EAAvBD,KAAK,EAAC;AAAM,GAAC,MAAI,E,gBAExBC,mBAAA,CAGK,a,aAFHA,mBAAA,CAAuC;EAAhCC,IAAI,EAAC,UAAU;EAACC,IAAI,EAAC,EAAE;EAACC,EAAE,EAAC;iBAClCH,mBAAA,CAA6B,aAAxB,oBAAkB,E;gEAG3BA,mBAAA,CAOK,a,aANHA,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAW,I,aACnBC,mBAAA,CAA+B;EAA1BD,KAAK,EAAC;AAAM,GAAC,SAAO,E,gBAE3BC,mBAAA,CAEK,a,aADHA,mBAAA,CAAuC;EAAhCC,IAAI,EAAC,UAAU;EAACC,IAAI,EAAC,EAAE;EAACC,EAAE,EAAC;;gEAGtCH,mBAAA,CAQK,a,aAPHA,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAW,I,aACnBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAM,GAAC,QAAM,E,gBAE1BC,mBAAA,CAGK,a,aAFHA,mBAAA,CAAoC;EAA7BC,IAAI,EAAC,OAAO;EAACC,IAAI,EAAC,EAAE;EAACC,EAAE,EAAC;iBAC/BH,mBAAA,CAAkC,aAA7B,yBAAuB,E;;EAK/BD,KAAK,EAAC;AAAS;gEAClBC,mBAAA,CAA6C;EAArCC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAM,IAAE;;EAC5BA,KAAK,EAAC;AAAK;;;uBA/CvBK,mBAAA,CAiDO,QAjDPC,UAiDO,GAhDLL,mBAAA,CA2CQ,SA3CRM,UA2CQ,GA1CNN,mBAAA,CAyCQ,gBAxCNA,mBAAA,CAaK,aAZHA,mBAAA,CAAuC;IAA9BO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,UAAOC,IAAI,SAAJA,IAAI,IAAAD,IAAA;KAAE,KAAG,GAC9BE,UAEK,EACLX,mBAAA,CAOK,aANHA,mBAAA,CAIM,c,gBAHJA,mBAAA,CAAqD;IAA9CC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,EAAE;IAACC,EAAE,EAAC,EAAE;IAX9C,uBAAAK,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAWwDC,KAAA,CAAAC,OAAO,GAAAF,MAAA;iDAAPC,KAAA,CAAAC,OAAO,E,GACjDd,mBAAA,CAAyC;IAAhCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEM,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAP,IAAA,CAAU;KAAE,MAAI,GAChCT,mBAAA,CAAsB,cAAAiB,gBAAA,CAAbJ,KAAA,CAAAK,GAAG,iB,GAEdC,UAAqC,C,KAGzCC,UAQK,EACLC,UAOK,EACLC,UAQK,C,KAGTtB,mBAAA,CAGM,OAHNuB,UAGM,GAFJC,UAA6C,EAC7CxB,mBAAA,CAAiE,UAAjEyB,WAAiE,GAA7CC,YAAA,CAAoCC,sBAAA;IAAvBC,EAAE,EAAC;EAAG;IAhD7CC,OAAA,EAAAC,QAAA,CAgD8C,MAAE,CAhDhDC,gBAAA,CAgD8C,IAAE,E;IAhDhDC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}